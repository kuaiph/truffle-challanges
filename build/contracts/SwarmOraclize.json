{
  "contractName": "SwarmOraclize",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "fileContent",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "newOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "swarmContent",
          "type": "string"
        }
      ],
      "name": "newSwarmContent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461007257806338bbfa50146100e9578063a2e62045146101a6578063a324b3a8146101b0578063e1d8d66a14610240575b600080fd5b34801561007e57600080fd5b506100e76004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506102a9565b005b3480156100f557600080fd5b506101a46004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506102ec565b005b6101ae6102f1565b005b3480156101bc57600080fd5b506101c561041d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102055780820151818401526020810190506101ea565b50505050905090810190601f1680156102325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024c57600080fd5b506102a7600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506104bb565b005b6102e8828260006040519080825280601f01601f1916602001820160405280156102e25781602001602082028038833980820191505090505b506102ec565b5050565b505050565b7f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a161041a6040805190810160405280600581526020017f737761726d000000000000000000000000000000000000000000000000000000815250606060405190810160405280604081526020017f613933306165336566306236316237643133303164353233623137346532343281526020017f62653133373934353130376139393837346564656530633235336665326361308152506105b2565b50565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104b35780601f10610488576101008083540402835291602001916104b3565b820191906000526020600020905b81548152906001019060200180831161049657829003601f168201915b505050505081565b6104c3610b54565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fc57600080fd5b7f042e5d6fd0273b06a69049ef53db9583b61f6197455927dc2721b38506d1a362816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055e578082015181840152602081019050610543565b50505050905090810190601f16801561058b5780820380516001836020036101000a031916815260200191505b509250505060405180910390a180600590805190602001906105ae929190611377565b5050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610624575060006106226000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610eb2565b145b15610635576106336000610ebd565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156106ba57600080fd5b505af11580156106ce573d6000803e3d6000fd5b505050506040513d60208110156106e457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561084c576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b505050506040513d60208110156107fa57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108f65780820151818401526020810190506108db565b50505050905090810190601f1680156109235780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561094257600080fd5b505af1158015610956573d6000803e3d6000fd5b505050506040513d602081101561096c57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156109a25760006001029150610b4d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610a5a578082015181840152602081019050610a3f565b50505050905090810190601f168015610a875780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610ac0578082015181840152602081019050610aa5565b50505050905090810190601f168015610aed5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610b0e57600080fd5b505af1158015610b22573d6000803e3d6000fd5b50505050506040513d6020811015610b3957600080fd5b810190808051906020019092919050505091505b5092915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610bc457506000610bc26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610eb2565b145b15610bd557610bd36000610ebd565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c5a57600080fd5b505af1158015610c6e573d6000803e3d6000fd5b505050506040513d6020811015610c8457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610dec576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050506040513d6020811015610d9a57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e7257600080fd5b505af1158015610e86573d6000803e3d6000fd5b505050506040513d6020811015610e9c57600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b6000610ec7610ece565b9050919050565b600080610eee731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610eb2565b1115610f8f57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f866040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061135d565b6001905061135a565b6000610fae73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610eb2565b111561104f5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110466040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061135d565b6001905061135a565b600061106e73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610eb2565b111561110f5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111066040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061135d565b6001905061135a565b600061112e73146500cfd35b22e4a392fe0adc06de1a1368ed48610eb2565b11156111cf5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111c66040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061135d565b6001905061135a565b60006111ee736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610eb2565b111561125157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061135a565b60006112707320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610eb2565b11156112d3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061135a565b60006112f27351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610eb2565b1115611355577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061135a565b600090505b90565b8060029080519060200190611373929190611377565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106113b857805160ff19168380011785556113e6565b828001600101855582156113e6579182015b828111156113e55782518255916020019190600101906113ca565b5b5090506113f391906113f7565b5090565b61141991905b808211156114155760008160009055506001016113fd565b5090565b905600a165627a7a723058206515ec24e1591167d8739ba00fb5024714d46af3521d0ca48bd96a6bd34228eb0029",
  "sourceMap": "334:643:12:-;;;548:8;:6;;;:8;;;:::i;:::-;334:643;;746:229;794:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:91;;;:::i;:::-;;746:229::o;14060:306:15:-;14145:10;14166;11234:1;11228:3;;;;;;;;;;;11220:15;;;11219:49;;;;11266:1;11239:25;11259:3;;;;;;;;;;;11239:11;;;:25;;;:::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;;;:35;;;:::i;:::-;;11216:101;11352:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11352:16:15;;;;;;;;;;;;;;;;11331:37;;11339:8;;;;;;;;;;;11331:37;;;;11328:92;;;11403:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11403:16:15;;;;;;;;;;;;;;;;11382:8;;:38;;;;;;;;;;;;;;;;;;11328:92;14179:8;;;;;;;;;;;:17;;;14197:10;14179:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14179:29:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14179:29:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14179:29:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14179:29:15;;;;;;;;;;;;;;;;14166:42;;14252:6;14240:11;:18;14230:7;:28;14222:5;:36;14218:50;;;14267:1;14260:8;;;;;;14218:50;14312:8;;;;;;;;;;;:14;;;14333:5;14340:1;14343:10;14355:3;14312:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14312:47:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14312:47:15;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14312:47:15;;;;;;;;;;;;;;;;14305:54;;11431:1;14060:306;;;;;:::o;33861:150::-;33923:10;33989:5;33977:18;33968:27;;33954:51;;;:::o;11544:183::-;11607:4;11627:21;:19;;;:21;;;:::i;:::-;11620:28;;11544:183;;;:::o;11732:1749::-;11780:4;11855:1;11799:55;11811:42;11799:11;;;:55;;;:::i;:::-;:57;11795:245;;;11909:42;11881:3;;:71;;;;;;;;;;;;;;;;;;11966:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12025:4;12018:11;;;;11795:245;12109:1;12053:55;12065:42;12053:11;;;:55;;;:::i;:::-;:57;12049:254;;;12171:42;12143:3;;:71;;;;;;;;;;;;;;;;;;12228:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;12288:4;12281:11;;;;12049:254;12372:1;12316:55;12328:42;12316:11;;;:55;;;:::i;:::-;:57;12312:249;;;12432:42;12404:3;;:71;;;;;;;;;;;;;;;;;;12489:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;12546:4;12539:11;;;;12312:249;12630:1;12574:55;12586:42;12574:11;;;:55;;;:::i;:::-;:57;12570:253;;;12692:42;12664:3;;:71;;;;;;;;;;;;;;;;;;12749:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12808:4;12801:11;;;;12570:253;12892:1;12836:55;12848:42;12836:11;;;:55;;;:::i;:::-;:57;12832:201;;;12954:42;12926:3;;:71;;;;;;;;;;;;;;;;;;13018:4;13011:11;;;;12832:201;13102:1;13046:55;13058:42;13046:11;;;:55;;;:::i;:::-;:57;13042:200;;;13163:42;13135:3;;:71;;;;;;;;;;;;;;;;;;13227:4;13220:11;;;;13042:200;13311:1;13255:55;13267:42;13255:11;;;:55;;;:::i;:::-;:57;13251:202;;;13374:42;13346:3;;:71;;;;;;;;;;;;;;;;;;13438:4;13431:11;;;;13251:202;13469:5;13462:12;;11732:1749;;:::o;39326:118::-;39424:13;39400:21;:37;;;;;;;;;;;;:::i;:::-;;39326:118;:::o;334:643:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "334:643:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13487:111:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13487:111:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13603:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13603:146:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:229:12;;;;;;380:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;380:25:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;380:25:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:171;;8:9:-1;5:2;;;30:1;27;20:12;5:2;569:171:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13487:111:15;13553:38;13564:4;13570:6;13588:1;13578:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13578:12:15;;;;13553:10;:38::i;:::-;13487:111;;:::o;13603:146::-;;;;:::o;746:229:12:-;794:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:91::i;:::-;;746:229::o;380:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;569:171::-;643:20;:18;:20::i;:::-;629:34;;:10;:34;;;621:43;;;;;;;;679:23;695:6;679:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;679:23:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:6;712:11;:20;;;;;;;;;;;;:::i;:::-;;569:171;:::o;14060:306:15:-;14145:10;14166;11234:1;11228:3;;;;;;;;;;;11220:15;;;11219:49;;;;11266:1;11239:25;11259:3;;;;;;;;;;;11239:11;:25::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;:35::i;:::-;;11216:101;11352:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11352:16:15;;;;;;;;;;;;;;;;11331:37;;11339:8;;;;;;;;;;;11331:37;;;;11328:92;;;11403:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11403:16:15;;;;;;;;;;;;;;;;11382:8;;:38;;;;;;;;;;;;;;;;;;11328:92;14179:8;;;;;;;;;;;:17;;;14197:10;14179:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14179:29:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14179:29:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14179:29:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14179:29:15;;;;;;;;;;;;;;;;14166:42;;14252:6;14240:11;:18;14230:7;:28;14222:5;:36;14218:50;;;14267:1;14260:8;;;;;;14218:50;14312:8;;;;;;;;;;;:14;;;14333:5;14340:1;14343:10;14355:3;14312:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14312:47:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14312:47:15;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14312:47:15;;;;;;;;;;;;;;;;14305:54;;11431:1;14060:306;;;;;:::o;33329:112::-;33389:7;11234:1;11228:3;;;;;;;;;;;11220:15;;;11219:49;;;;11266:1;11239:25;11259:3;;;;;;;;;;;11239:11;:25::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;:35::i;:::-;;11216:101;11352:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11352:16:15;;;;;;;;;;;;;;;;11331:37;;11339:8;;;;;;;;;;;11331:37;;;;11328:92;;;11403:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11403:16:15;;;;;;;;;;;;;;;;11382:8;;:38;;;;;;;;;;;;;;;;;;11328:92;33414:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33414:20:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33414:20:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33414:20:15;;;;;;;;;;;;;;;;33407:27;;33329:112;:::o;33861:150::-;33923:10;33989:5;33977:18;33968:27;;33954:51;;;:::o;11544:183::-;11607:4;11627:21;:19;:21::i;:::-;11620:28;;11544:183;;;:::o;11732:1749::-;11780:4;11855:1;11799:55;11811:42;11799:11;:55::i;:::-;:57;11795:245;;;11909:42;11881:3;;:71;;;;;;;;;;;;;;;;;;11966:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12025:4;12018:11;;;;11795:245;12109:1;12053:55;12065:42;12053:11;:55::i;:::-;:57;12049:254;;;12171:42;12143:3;;:71;;;;;;;;;;;;;;;;;;12228:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12288:4;12281:11;;;;12049:254;12372:1;12316:55;12328:42;12316:11;:55::i;:::-;:57;12312:249;;;12432:42;12404:3;;:71;;;;;;;;;;;;;;;;;;12489:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12546:4;12539:11;;;;12312:249;12630:1;12574:55;12586:42;12574:11;:55::i;:::-;:57;12570:253;;;12692:42;12664:3;;:71;;;;;;;;;;;;;;;;;;12749:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12808:4;12801:11;;;;12570:253;12892:1;12836:55;12848:42;12836:11;:55::i;:::-;:57;12832:201;;;12954:42;12926:3;;:71;;;;;;;;;;;;;;;;;;13018:4;13011:11;;;;12832:201;13102:1;13046:55;13058:42;13046:11;:55::i;:::-;:57;13042:200;;;13163:42;13135:3;;:71;;;;;;;;;;;;;;;;;;13227:4;13220:11;;;;13042:200;13311:1;13255:55;13267:42;13255:11;:55::i;:::-;:57;13251:202;;;13374:42;13346:3;;:71;;;;;;;;;;;;;;;;;;13438:4;13431:11;;;;13251:202;13469:5;13462:12;;11732:1749;;:::o;39326:118::-;39424:13;39400:21;:37;;;;;;;;;;;;:::i;:::-;;39326:118;:::o;334:643:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/*\n  Swarm installation: https://swarm-guide.readthedocs.io/en/latest/installation.html#installing-swarm-from-a-package-manager\n  Swarm upload to the public gateway: https://swarm-guide.readthedocs.io/en/latest/up-and-download.html#uploading-to-a-remote-swarm-node  \n*/\npragma solidity ^0.4.24;\n\nimport \"../utils/usingOraclize.sol\";\n\ncontract SwarmOraclize is usingOraclize {\n    string public fileContent;\n\n    event newOraclizeQuery(string description);\n    event newSwarmContent(string swarmContent);\n\n    constructor() public payable {\n        update();\n    }\n\n    function __callback(string result) public {\n        require(msg.sender == oraclize_cbAddress());\n        emit newSwarmContent(result);\n        fileContent = result; \n    }\n\n    function update() public payable {\n        emit newOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\n        oraclize_query(\"swarm\", \"a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0\");\n    }\n}",
  "sourcePath": "/Users/pbrudny/jsy/truffle-challanges/contracts/26_swarm_oraclize/SwarmOraclize.sol",
  "ast": {
    "absolutePath": "/Users/pbrudny/jsy/truffle-challanges/contracts/26_swarm_oraclize/SwarmOraclize.sol",
    "exportedSymbols": {
      "SwarmOraclize": [
        1144
      ]
    },
    "id": 1145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1088,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "270:24:12"
      },
      {
        "absolutePath": "/Users/pbrudny/jsy/truffle-challanges/contracts/utils/usingOraclize.sol",
        "file": "../utils/usingOraclize.sol",
        "id": 1089,
        "nodeType": "ImportDirective",
        "scope": 1145,
        "sourceUnit": 7255,
        "src": "296:36:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1090,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7254,
              "src": "360:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7254",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 1091,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:12"
          }
        ],
        "contractDependencies": [
          7254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1144,
        "linearizedBaseContracts": [
          1144,
          7254
        ],
        "name": "SwarmOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1093,
            "name": "fileContent",
            "nodeType": "VariableDeclaration",
            "scope": 1144,
            "src": "380:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1092,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "380:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1097,
            "name": "newOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "435:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:20:12"
            },
            "src": "412:43:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1101,
            "name": "newSwarmContent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "indexed": false,
                  "name": "swarmContent",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "482:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:21:12"
            },
            "src": "460:43:12"
          },
          {
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "538:25:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1104,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "548:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1106,
                  "nodeType": "ExpressionStatement",
                  "src": "548:8:12"
                }
              ]
            },
            "documentation": null,
            "id": 1108,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:12"
            },
            "payable": true,
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:12"
            },
            "scope": 1144,
            "src": "509:54:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "611:129:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8309,
                            "src": "629:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "629:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1116,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5227,
                            "src": "643:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "643:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "629:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8312,
                        8313
                      ],
                      "referencedDeclaration": 8312,
                      "src": "621:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "621:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "621:43:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1122,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "695:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1121,
                      "name": "newSwarmContent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "679:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "EmitStatement",
                  "src": "674:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1125,
                      "name": "fileContent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "712:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1126,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "726:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "712:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "712:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 1130,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "589:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:15:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:12"
            },
            "scope": 1144,
            "src": "569:171:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1142,
              "nodeType": "Block",
              "src": "779:196:12",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "811:55:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 1133,
                      "name": "newOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1097,
                      "src": "794:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "EmitStatement",
                  "src": "789:78:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "737761726d",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "892:7:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc92fb9215636a9bc359d7267c6b97ae997bca49b99ce07105a64793a13c0718",
                          "typeString": "literal_string \"swarm\""
                        },
                        "value": "swarm"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61393330616533656630623631623764313330316435323362313734653234326265313337393435313037613939383734656465653063323533666532636130",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "901:66:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd58b42e1860af4a9bf07aca5ba73eeaeba21c8293d95df00a64325a04a5a4a",
                          "typeString": "literal_string \"a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0\""
                        },
                        "value": "a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc92fb9215636a9bc359d7267c6b97ae997bca49b99ce07105a64793a13c0718",
                          "typeString": "literal_string \"swarm\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd58b42e1860af4a9bf07aca5ba73eeaeba21c8293d95df00a64325a04a5a4a",
                          "typeString": "literal_string \"a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0\""
                        }
                      ],
                      "id": 1137,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2259,
                        2301,
                        2347,
                        2391,
                        2434,
                        2479,
                        2528,
                        2575,
                        2622,
                        2671,
                        2724,
                        2775,
                        2812,
                        2852,
                        2895,
                        2935,
                        2980,
                        3028,
                        3079,
                        3127,
                        3180,
                        3236,
                        3295,
                        3351,
                        3412,
                        3476,
                        3543,
                        3607,
                        3676,
                        3748,
                        3823,
                        3895,
                        3942,
                        3991,
                        4044,
                        4095,
                        4132,
                        4172,
                        4215,
                        4255,
                        4300,
                        4348,
                        4399,
                        4447,
                        4500,
                        4556,
                        4615,
                        4671,
                        4732,
                        4796,
                        4863,
                        4927,
                        4996,
                        5068,
                        5143,
                        5215
                      ],
                      "referencedDeclaration": 2259,
                      "src": "877:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:91:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "877:91:12"
                }
              ]
            },
            "documentation": null,
            "id": 1143,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:12"
            },
            "payable": true,
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:12"
            },
            "scope": 1144,
            "src": "746:229:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1145,
        "src": "334:643:12"
      }
    ],
    "src": "270:707:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/pbrudny/jsy/truffle-challanges/contracts/26_swarm_oraclize/SwarmOraclize.sol",
    "exportedSymbols": {
      "SwarmOraclize": [
        1144
      ]
    },
    "id": 1145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1088,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "270:24:12"
      },
      {
        "absolutePath": "/Users/pbrudny/jsy/truffle-challanges/contracts/utils/usingOraclize.sol",
        "file": "../utils/usingOraclize.sol",
        "id": 1089,
        "nodeType": "ImportDirective",
        "scope": 1145,
        "sourceUnit": 7255,
        "src": "296:36:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1090,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7254,
              "src": "360:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7254",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 1091,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:12"
          }
        ],
        "contractDependencies": [
          7254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1144,
        "linearizedBaseContracts": [
          1144,
          7254
        ],
        "name": "SwarmOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1093,
            "name": "fileContent",
            "nodeType": "VariableDeclaration",
            "scope": 1144,
            "src": "380:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1092,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "380:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1097,
            "name": "newOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "435:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:20:12"
            },
            "src": "412:43:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1101,
            "name": "newSwarmContent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "indexed": false,
                  "name": "swarmContent",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "482:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:21:12"
            },
            "src": "460:43:12"
          },
          {
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "538:25:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1104,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "548:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1106,
                  "nodeType": "ExpressionStatement",
                  "src": "548:8:12"
                }
              ]
            },
            "documentation": null,
            "id": 1108,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:12"
            },
            "payable": true,
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:12"
            },
            "scope": 1144,
            "src": "509:54:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "611:129:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8309,
                            "src": "629:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "629:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1116,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5227,
                            "src": "643:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "643:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "629:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8312,
                        8313
                      ],
                      "referencedDeclaration": 8312,
                      "src": "621:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "621:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "621:43:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1122,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "695:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1121,
                      "name": "newSwarmContent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "679:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "EmitStatement",
                  "src": "674:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1125,
                      "name": "fileContent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "712:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1126,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "726:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "712:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "712:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 1130,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "589:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:15:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:12"
            },
            "scope": 1144,
            "src": "569:171:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1142,
              "nodeType": "Block",
              "src": "779:196:12",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "811:55:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 1133,
                      "name": "newOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1097,
                      "src": "794:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "EmitStatement",
                  "src": "789:78:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "737761726d",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "892:7:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc92fb9215636a9bc359d7267c6b97ae997bca49b99ce07105a64793a13c0718",
                          "typeString": "literal_string \"swarm\""
                        },
                        "value": "swarm"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61393330616533656630623631623764313330316435323362313734653234326265313337393435313037613939383734656465653063323533666532636130",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "901:66:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd58b42e1860af4a9bf07aca5ba73eeaeba21c8293d95df00a64325a04a5a4a",
                          "typeString": "literal_string \"a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0\""
                        },
                        "value": "a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc92fb9215636a9bc359d7267c6b97ae997bca49b99ce07105a64793a13c0718",
                          "typeString": "literal_string \"swarm\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd58b42e1860af4a9bf07aca5ba73eeaeba21c8293d95df00a64325a04a5a4a",
                          "typeString": "literal_string \"a930ae3ef0b61b7d1301d523b174e242be137945107a99874edee0c253fe2ca0\""
                        }
                      ],
                      "id": 1137,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2259,
                        2301,
                        2347,
                        2391,
                        2434,
                        2479,
                        2528,
                        2575,
                        2622,
                        2671,
                        2724,
                        2775,
                        2812,
                        2852,
                        2895,
                        2935,
                        2980,
                        3028,
                        3079,
                        3127,
                        3180,
                        3236,
                        3295,
                        3351,
                        3412,
                        3476,
                        3543,
                        3607,
                        3676,
                        3748,
                        3823,
                        3895,
                        3942,
                        3991,
                        4044,
                        4095,
                        4132,
                        4172,
                        4215,
                        4255,
                        4300,
                        4348,
                        4399,
                        4447,
                        4500,
                        4556,
                        4615,
                        4671,
                        4732,
                        4796,
                        4863,
                        4927,
                        4996,
                        5068,
                        5143,
                        5215
                      ],
                      "referencedDeclaration": 2259,
                      "src": "877:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:91:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "877:91:12"
                }
              ]
            },
            "documentation": null,
            "id": 1143,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:12"
            },
            "payable": true,
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:12"
            },
            "scope": 1144,
            "src": "746:229:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1145,
        "src": "334:643:12"
      }
    ],
    "src": "270:707:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-28T17:19:52.945Z"
}